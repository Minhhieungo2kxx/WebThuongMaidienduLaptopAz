
server.port=8081


spring.datasource.url =jdbc:mysql://localhost:3306/laptopshop
spring.datasource.username = root
spring.datasource.password = Hieuvlcm91


# spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.ddl-auto =create
spring.jpa.hibernate.ddl-auto =update
#spring.jpa.hibernate.ddl-auto =create-drop

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true



# spring.profiles.active=uat




#config max upload file size va count file
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# config log
# logging.level.org.springframework.security=debug;


# config session
spring.session.store-type=jdbc
server.servlet.session.timeout=30m
spring.session.jdbc.initialize-schema=always
# spring.session.jdbc.schema=
# spring.session.jdbc.table-name=


# Email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub


# === Cấu hình GỌI API GEMINI bằng API key ===
gemini.api.key=${gemini.api.key}
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent

# (Tùy chọn) Logging để debug HTTP
logging.level.org.springframework.web=DEBUG




